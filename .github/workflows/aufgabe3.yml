name: Aufgabe 3 - Lambda Deployment

on:
  push:
    branches: [ "main" ]

jobs:
  deploy-lambda:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hello-world
          IMAGE_TAG: latest
        run: |
          cd hello-world
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Create or update Lambda function
        run: |
          FUNCTION_NAME="hello-world"
          IMAGE_URI="${{ env.IMAGE_URI }}"
          ROLE_ARN="arn:aws:iam::$(aws sts get-caller-identity --query Account --output text):role/LabRole"
          
          # Check if function exists
          if aws lambda get-function --function-name "$FUNCTION_NAME" 2>/dev/null; then
            echo "Updating existing Lambda function..."
            aws lambda update-function-code \
              --function-name "$FUNCTION_NAME" \
              --image-uri "$IMAGE_URI"
            
            # Wait for update to complete
            aws lambda wait function-updated --function-name "$FUNCTION_NAME"
            echo "Lambda function updated successfully"
          else
            echo "Creating new Lambda function..."
            aws lambda create-function \
              --function-name "$FUNCTION_NAME" \
              --role "$ROLE_ARN" \
              --code ImageUri="$IMAGE_URI" \
              --package-type Image \
              --timeout 60 \
              --memory-size 128 \
              --description "Hello World Lambda function"
            echo "Lambda function created successfully"
          fi
          
      - name: Test Lambda function
        run: |
          FUNCTION_NAME="hello-world"
          
          echo "Testing Lambda function..."
          RESPONSE=$(aws lambda invoke \
            --function-name "$FUNCTION_NAME" \
            --payload '{}' \
            --cli-binary-format raw-in-base64-out \
            /tmp/response.json)
          
          echo "Lambda Response:"
          cat /tmp/response.json
          
          echo -e "\nInvocation Details:"
          echo "$RESPONSE"
